name: "Verify pull requests"

on:
  pull_request:
    types: [labeled, unlabeled]
  pull_request_review:
    types: [submitted]

env:
  LABELS: ${{ join( github.event.pull_request.labels.*.name, ' ' ) }}

jobs:
  verifylabels:
    name: verify_labels
    runs-on: ubuntu-latest
    steps:
      ###
      # 1. Every pull request must have either of one labels no-release, development-release or production-release.
      # 2. Also, every pull request can only have one of the labels from no-release, development-release or production-release.
      ###
      - name: Verify pull request has correct labels
        run: |
          counter=0
          for label in ${{ env.LABELS }}; do
            if [ $label == "no-release" ] || [ $label == "development-release" ] || [ $label == "production-release" ]
            then
              counter=$((counter+1))
            fi
          done
          if [ "$counter" -eq 0 ]
          then
            echo "Pull request must have one of no-release, production-release or development-release label."
            exit 1
          fi
          if [ "$counter" -gt 1 ]
          then
            echo "Pull request can only have one of no-release, production-release or development-release label."
            exit 1
          fi

      - name: Checkout project
        uses: actions/checkout@v3

      # Get all the changed files which are part of the pull request.
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v22
        with:
          since_last_remote_commit: 'true'

      ###
      # - development-release label must have target branch as develop.
      # - development-release label must not have VERSION files changes.
      ###
      - name: Verify development-release label
        if: contains (env.LABELS, 'development-release')
        run: |
          if [ ${{ github.base_ref }} != 'develop' ]
          then
            echo "Pull request with development-release label must have base reference branch as develop."
            exit 1
          fi
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              if [[ $file == *"VERSION"* ]] || [[ $file == *".bumpversion.cfg" ]] || [[ $file == *"settings.cfg" ]]
              then
                  echo "Pull request with development-release label must not have VERSION updates to python Packages."
                  exit 1
              fi
          done

      ###
      # - production-release label must have target branch as develop or master.
      # - production-release label must have VERSION files changes only if the head branch is not release.
      ###
      - name: Verify production-release label
        if: contains (env.LABELS, 'production-release')
        run: |
          if [ ${{ github.base_ref }} != 'master' ] && [ ${{ github.base_ref }} != 'develop' ]
          then
            echo "Pull request with production-release label must have base reference branch as master or develop."
            exit 1
          fi
          if [ ${{ github.head_ref }} != 'release' ]
          then
            for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              if [[ $file != *"VERSION"* ]] && [[ $file != *".bumpversion.cfg"* ]]
              then
                  echo "Pull request with production-release label must only have VERSION updates to python Packages."
                  exit 1
              fi
            done
          fi
