/*
 * Copyright (c) 2019 by Delphix. All rights reserved.
 */

plugins {
  id "java"
  id "com.google.protobuf"
  id "delphix.python"
}

repositories {
  mavenCentral()
}

dependencies {
  // Necessary to compile generated java protocol buffer libraries.
  compile 'com.google.protobuf:protobuf-java:3.6.1'
}

protobuf {

  protoc {
    artifact = 'com.google.protobuf:protoc:3.6.1'
  }

  // This activates other protoc language targets.
  // https://github.com/google/protobuf-gradle-plugin#default-outputs
  generateProtoTasks {
    all().each { task ->
      task.builtins {
        python {
        }
      }
    }
  }
  generatedFilesBaseDir = "$projectDir/src"
}

artifacts {
  python sdist.distFile
}

dlpxPython {
  sources {
    delphix {
      url = "https://artifactory.delphix.com/artifactory/api/pypi/delphix-virtual-pypi/simple/"
    }
  }

  dist {
    name = "dvp-common"
  }

  packages {
    protobuf {
      version = "==3.6.1"
    }
  }

  devPackages {
  }

  supportedPythons {
    "python2.7" {}
  }
}

/*
 * This is a temporary task. 'src/main/java' only contains compiled protobuf classes. Sometimes these get out of date
 * and they need to be cleaned up manually. In the long term, everything should probably be built under 'build' so
 * the 'clean' task automatically deletes them. In the short term though, this task cleans them up.
 */
task removeProtobufJava(type: Delete) {
  delete "${projectDir}/src/main/java"
}

/*
 * As part of running a packages 'setup.py' file, setuptools creates 'egg-info' directories that contain information
 * about the build distribution. These can sometimes cause issues. We should probably build Python distributions in
 * 'build' so these would be created there, however they still could be created in the 'src' directory if someone runs
 * 'setup.py' manually. This is often done during development to install the package for testing.
 */
task removeEggInfo(type: Delete) {
  delete "${projectDir}/src/main/python/dvp_common.egg-info"
}

task wheel(type: SetupPyTask) {
    setupPyCommand "bdist_wheel"
    distFile String.format("%s-%s-%s-%s-%s.whl", dist.name.get().replace("-", "_"), "$project.version".replace("-", "_"), "py2", "none", "any")

    dependsOn makeSetupPy
}

clean.dependsOn('removeProtobufJava')
clean.dependsOn('removeEggInfo')

project.afterEvaluate {
  tasks["sdist"].dependsOn tasks["generateProto"]
  tasks["test_python2.7"].dependsOn tasks["generateProto"]
}
